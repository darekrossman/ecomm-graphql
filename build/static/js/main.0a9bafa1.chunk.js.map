{"version":3,"sources":["ProductList.js","ProductDetailImages.js","ProductDetail.js","index.js"],"names":["ProductList","react_default","a","createElement","react_apollo_browser_umd","query","gql","_templateObject","_ref","loading","error","data","message","className","products","map","product","Link","to","path","key","id","src","thumbnail","alt","name","price","ProductDetail","props","ProductDetailImages_templateObject","variables","productPath","productData","productImages","images","ProductDetail_templateObject","match","url","ProductDetailImages","client","ApolloClient","uri","cacheRedirects","Query","getProduct","_","args","getCacheKey","pathParts","split","__typename","length","replace","rootElement","document","getElementById","ReactDOM","render","BrowserRouter","Fragment","Route","exact","component"],"mappings":"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","file":"static/js/main.0a9bafa1.chunk.js","sourcesContent":["import React from \"react\"\nimport { Query } from \"react-apollo\"\nimport gql from \"graphql-tag\"\nimport { Link } from \"react-router-dom\"\n\nconst ProductList = () => (\n  <Query\n    query={gql`\n      {\n        products: getProducts(\n          path: \"/thumbnail/Furniture/Living-Room-Furniture/Console-Tables/pc/2285/c/3058/2610.uts\"\n        ) {\n          id\n          name\n          path\n          price\n          rating\n          thumbnail\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>\n      if (error) return <p>{error.message}</p>\n\n      return (\n        <div className=\"product-grid\">\n          {data.products.map(product => (\n            <Link to={product.path} key={product.id} className=\"product-card\">\n              <div className=\"product-card-image aspect-1\">\n                <img src={product.thumbnail} alt={product.name} />\n              </div>\n              <div className=\"product-card-info\">\n                <p className=\"product-card-title\">{product.name}</p>\n                <p className=\"product-card-price\">${product.price}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n      )\n    }}\n  </Query>\n)\n\nexport default ProductList\n","import React from \"react\"\nimport { Query } from \"react-apollo\"\nimport gql from \"graphql-tag\"\nimport { Transition, config } from \"react-spring\"\n\nconst ProductDetail = props => (\n  <Query\n    query={gql`\n      query GetProduct($path: String!) {\n        productImages: getProduct(path: $path) {\n          id\n          images\n        }\n      }\n    `}\n    variables={{ path: props.productPath }}\n  >\n    {({ loading, error, data }) => {\n      return (\n        <div className=\"product-detail-image aspect-1\">\n          {!loading && !error ? (\n            <img\n              src={data.productImages.images[0]}\n              alt={props.productData.name}\n            />\n          ) : (\n            <img\n              className=\"blur-up\"\n              src={props.productData.thumbnail}\n              alt=\"blurred preview\"\n            />\n          )}\n        </div>\n      )\n    }}\n  </Query>\n)\n\nexport default ProductDetail\n","import React from \"react\"\nimport { Query } from \"react-apollo\"\nimport gql from \"graphql-tag\"\nimport ProductDetailImages from \"./ProductDetailImages\"\n\nconst ProductDetail = props => (\n  <Query\n    query={gql`\n      query GetProduct($path: String!) {\n        product: getProduct(path: $path) {\n          id\n          name\n          price\n          rating\n          thumbnail\n        }\n      }\n    `}\n    variables={{ path: props.match.url }}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>loading...</p>\n      if (error) return <p>{error.message}</p>\n\n      const { product } = data\n\n      return (\n        <div className=\"product-detail-root\">\n          <ProductDetailImages\n            productPath={props.match.url}\n            productData={product}\n          />\n          <section className=\"product-detail-content\">\n            <h1 className=\"product-detail-title\">{product.name}</h1>\n            <p className=\"product-detail-price\">${product.price}</p>\n          </section>\n        </div>\n      )\n    }}\n  </Query>\n)\n\nexport default ProductDetail\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport ApolloClient from \"apollo-boost\"\nimport { ApolloProvider } from \"react-apollo\"\nimport ProductList from \"./ProductList\"\nimport ProductDetail from \"./ProductDetail\"\n\nimport \"./styles.css\"\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n  cacheRedirects: {\n    Query: {\n      getProduct: (_, args, { getCacheKey }) => {\n        const pathParts = args.path.split('/')\n        const id = pathParts[pathParts.length - 1].replace('.uts', '')\n        return getCacheKey({ __typename: \"Product\", id })\n      }\n    }\n  }\n})\n\nfunction App() {\n  return (\n    <Router>\n      <ApolloProvider client={client}>\n        <>\n          <Route exact path=\"/\" component={ProductList} />\n          <Route\n            path=\"/product/:parentCategorySlug/:categorySlug/:productSlug/pc/:parentCategoryId/c/:categoryId/:productId.uts\"\n            component={ProductDetail}\n          />\n          <Route\n            path=\"/product/:parentCategorySlug/:categorySlug/:subCategorySlug/:productSlug/pc/:parentCategoryId/c/:categoryId/sc/:subCategoryId/:productId.uts\"\n            component={ProductDetail}\n          />\n          <Route\n            path=\"/product/:parentCategorySlug/:categorySlug/:productSlug/productVariantId/:productVariantId/pc/:parentCategoryId/c/:categoryId/:productId.uts\"\n            component={ProductDetail}\n          />\n        </>\n      </ApolloProvider>\n    </Router>\n  )\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}